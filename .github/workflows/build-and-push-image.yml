name: Build and push image

on:
  workflow_call:
    inputs:
      push:
        description: "Flag to determine if the image should be pushed to the registry"
        default: true
        type: boolean
      image-name:
        description: "The name of the image to be built"
        type: string
        required: true
      registry-url:
        description: "The URL of the container registry"
        type: string
        required: true
      tag:
        description: "The tag of the image to be built"
        type: string
        required: true
      dockerfile:
        description: "The name of the Dockerfile to be used"
        type: string
        required: false
        default: "Dockerfile"
    outputs:
      image:
        description: "The output representing the built image"
        value: ${{ jobs.build-and-push-image.outputs.image }}
      tag:
        description: "The output representing the tag of the built image"
        value: ${{ jobs.build-and-push-image.outputs.tag }}
    secrets:
      registry-username:
        description: "The username for the container registry"
        required: true
      registry-password:
        description: "The password for the container registry"
        required: true
      container-build-args:
        description: "Container build args"
        required: false
      container-secrets:
        description: "Container secrets"
        required: false

jobs:
  build-and-push-image:
    name: Build and push image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "true"

      - name: Set image
        id: set-image
        run: echo "image=${{ inputs.image-name }}:${{ inputs.tag }}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry-url }}
          username: ${{ secrets.registry-username }}
          password: ${{ secrets.registry-password }}

      - name: Prepare build-args
        id: prepare-build-args
        run: |
          echo "${{ secrets.container-build-args }}" > container-build-args.txt
          echo "IMAGE_TAG=${{ inputs.tag }}" >> container-build-args.txt
        shell: bash

      - name: Export build-args
        id: export-build-args
        run: |
          # Using GitHub's new method for setting outputs:
          echo "buildArgs<<EOF" >> $GITHUB_OUTPUT
          cat container-build-args.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        shell: bash

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ inputs.push }}
          tags: ${{ steps.set-image.outputs.image }}
          file: ${{ inputs.dockerfile }}
          build-args: ${{ steps.export-build-args.outputs.buildArgs }}
          platforms: linux/amd64,linux/arm64
          secrets: ${{ secrets.container-secrets }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

    outputs:
      image: ${{ steps.set-image.outputs.image }}
      tag: ${{ inputs.tag }}
