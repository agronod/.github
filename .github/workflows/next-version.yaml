name: Next version
on:
  workflow_call:
    inputs:
      is-pull-request:
        description: "Flag to determine if the version is for a pull request"
        default: false
        type: boolean
    outputs:
      version:
        description: Next version
        value: ${{ jobs.next-version.outputs.version }}
      tag:
        description: Next tag
        value: ${{ jobs.next-version.outputs.tag }}
      changelog:
        description: Changelog
        value: ${{ jobs.next-version.outputs.changelog }}
    secrets:
      github-token:
        description: "Github token to be able to build inside the container"
        required: true

jobs:
  next-version:
    name: Get Next Version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code for pull request
        if: ${{ inputs.is-pull-request }}
        uses: actions/checkout@v2
        with:
          submodules: "true"
          token: ${{ secrets.github-token }}
          ref: ${{ github.event.pull_request.base.ref }}
          fetch-depth: 0

      - name: Fetch all tags reachable from base branch
        if: ${{ inputs.is-pull-request }}
        run: |
          git fetch --tags
          LATEST_TAG=$(git describe --tags --abbrev=0)
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Create CI version tag
        if: ${{ inputs.is-pull-request }}
        run: |
          NEW_TAG="${LATEST_TAG}-${{ github.event.number }}-$(git rev-parse --short HEAD)"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "NEW_VERSION=${NEW_TAG}" >> $GITHUB_ENV

      - name: Identify new semver version
        if: ${{ !inputs.is-pull-request }}
        uses: mathieudutour/github-tag-action@v6.2
        id: tag_version
        with:
          fetch_all_tags: true
          github_token: ${{ secrets.github-token }}
          dry_run: ${{ inputs.is-pull-request }}

      - name: Set environment variables
        if: ${{ !inputs.is-pull-request }}
        run: |
          NEW_TAG="${{ steps.tag_version.outputs.new_tag }}"
          NEW_VERSION="${{ steps.tag_version.outputs.new_version }}"

          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Show tag and version
        run: |
          echo "Tag: ${{ env.NEW_TAG }}"
          echo "Version: ${{ env.NEW_VERSION }}"

    outputs:
      tag: ${{ env.NEW_TAG }}
      version: ${{ env.NEW_VERSION }}
      changelog: ${{ steps.tag_version.outputs.changelog }}
